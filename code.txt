--Defining variables

local ReplicatedStorage=game:GetService("ReplicatedStorage")

local ServerStorage=game:GetService("ServerStorage")

local MapsFolder=ServerStorage:WaitForChild("Maps")

local Status=ReplicatedStorage:WaitForChild("Status")

local GameLength=100

local reward=100

--Game loop

while true do
	
	Status.Value="Waiting for 2 or more playersüòÖ..."
	
	repeat wait(1) until game.Players.NumPlayers >=2
	
	Status.Value="Intermission(wait for matchüòÖ)"
	
	wait(10)
	
	local plrs={}
	--For loop to insert players into plrs table
	for i,player in pairs(game.Players:GetPlayers()) do
		if player then
			table.insert(plrs,player)  --Adding each player into the game
		end
	end
	
	wait(2)
	
	local AvailableMaps=MapsFolder:GetChildren()
	
	local ChosenMap=AvailableMaps[math.random(1,#AvailableMaps)]
	
	Status.Value=ChosenMap.Name.." map is chosen to fight!"
	
	local ClonedMap=ChosenMap:Clone()
	ClonedMap.Parent=game.workspace
	
	--Teleport players to the map
	
	local SpawnPoints=ClonedMap:FindFirstChild("SpawnPoints")
	
	if not SpawnPoints then
		print("Error: SpawnPoints in "..ClonedMap.Name.." not found.")
	end
	
	local AvailableSpawnPoints=SpawnPoints:GetChildren()
	
	for i,player in pairs(plrs) do
		if player then
			character=player.Character
			
			if character then
				--Code to teleport character
				
				character:FindFirstChild("HumanoidRootPart").CFrame=AvailableSpawnPoints[1].CFrame
				table.remove(AvailableSpawnPoints,1)
				
				
				--Give players a sword to fight(duh)
				
				local Sword=ServerStorage:WaitForChild("Sword"):Clone()
				Sword.Parent=player.Backpack
				
				local GameTag=Instance.new("BoolValue")
				GameTag.Name="GameTag"
				GameTag.Parent=player.Character
				
			else
				--There is no character
				if not player then
					table.remove(plrs,i)
				end
			end
		end	
	end
	
	
	Status.Value="Fight!"
	
	wait(2)
	
	for i=GameLength,0,-1 do
		
		for x,player in pairs(plrs) do
			if player then
				
				character=player.Character
				
				if not character then
					--Left the game
				else
					if character:FindFirstChild("GameTag") then
						-- They are still fighting for their LIVES ‚öîÔ∏è
						print(player.Name.." is still alive!")
					else
						-- They are DEADüòµ
						table.remove(plrs,x)
						print(player.Name.." has died.!")
					end
				end
			else
				table.remove(plrs,x)
				print(player.Name.." has been removed.!")
			end
		end
		
		Status.Value="The are "..i.." seconds and "..#plrs.." players remaining!"
		
		if #plrs==1 then
			-- Someone won
			local leaderstats=plrs[1] and plrs[1]:FindFirstChild("leaderstats")
			local coinStat=leaderstats and leaderstats:FindFirstChild("Coins") 
			coinStat.Value+=reward	
			Status.Value=plrs[1].Name.." has won!"
			break
		elseif #plrs==0 then
			Status.Value="Did two players kill each other at the same time? Because nobody won!"
			break
		elseif i==0 then
			Status.Value="Sorry! Time up!‚òπ"
			break
			
		end
		
		wait(1)
	end
	
	print("End of game!")
	
	for i,player in pairs(game.Players:GetPlayers())do
		character=player.Character
		
		if not character then
			--Ignore them because they might have left
		else
			if character:FindFirstChild("GameTag") then
				character.GameTag:Destroy()
			end
			if player.Backpack:FindFirstChild("Sword") then
				
				player.Backpack.Sword:Destroy()
				
			end	
			if character:FindFirstChild("Sword") then
				
				character.Sword:Destroy()
			end
			
			player:LoadCharacter()
		end
	end
	
	ClonedMap:Destroy()
	
	wait(2)
	
	Status.Value="Battle fininshed!"
end
